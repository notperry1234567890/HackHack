//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "1.12 stable mappings"!

package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.settings.Setting;
import com.gamesense.api.util.world.WorldUtils;
import com.gamesense.client.command.Command;
import com.gamesense.client.module.Module;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Iterator;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.Vec3d;

public class CoordExploit extends Module {
  private final HashMap knownPlayers;
  
  private final HashMap tpdPlayers;
  
  private int numTicks;
  
  private int numForgetTicks;
  
  Setting.Boolean chatMessages;
  
  public CoordExploit() {
    super("CoordExploit", Module.Category.Exploits);
    this.knownPlayers = new HashMap<>();
    this.tpdPlayers = new HashMap<>();
    this.numTicks = 0;
    this.numForgetTicks = 0;
  }
  
  public void setup() {
    this.chatMessages = registerBoolean("Chat Messages", "ChatMessages", false);
  }
  
  public void dump() {
    Iterator<Entity> var1 = mc.world.loadedEntityList.iterator();
    while (var1.hasNext()) {
      Entity entity = var1.next();
      if (entity instanceof net.minecraft.entity.player.EntityPlayer) {
        System.out.println(entity.getName() + ": " + WorldUtils.vectorToString(entity.getPositionVector(), new boolean[0]));
        Command.sendClientMessage(entity.getName() + ": " + WorldUtils.vectorToString(entity.getPositionVector(), new boolean[0]));
      } 
    } 
  }
  
  public void clear() {
    this.knownPlayers.clear();
  }
  
  public void saveFile(String pos, String name) {
    try {
      File file = new File("./GameSense/Messages/CoordExploit.json");
      file.getParentFile().mkdirs();
      PrintWriter writer = new PrintWriter(new FileWriter(file, true));
      writer.println("name: " + name + " coords: " + pos);
      writer.close();
    } catch (Exception var5) {
      Command.sendClientMessage("Error saving file: " + var5);
    } 
  }
  
  public void onUpdate() {
    if (isEnabled()) {
      if (this.numTicks >= 50) {
        this.numTicks = 0;
        Iterator<Entity> var1 = mc.world.loadedEntityList.iterator();
        while (var1.hasNext()) {
          Entity entity = var1.next();
          if (entity instanceof net.minecraft.entity.player.EntityPlayer && 
            !entity.getName().equals(mc.player.getName())) {
            Vec3d playerPos = new Vec3d((int)entity.posX, (int)entity.posY, (int)entity.posZ);
            if (this.knownPlayers.containsKey(entity)) {
              if (Math.abs(((Vec3d)this.knownPlayers.get(entity)).distanceTo(playerPos)) > 50.0D && Math.abs(mc.player.getPositionVector().distanceTo(playerPos)) > 100.0D && (!this.tpdPlayers.containsKey(entity.getName()) || this.tpdPlayers.get(entity.getName()) != playerPos)) {
                if (this.chatMessages.getValue())
                  Command.sendClientMessage("Player " + entity.getName() + " teleported to " + WorldUtils.vectorToString(playerPos, new boolean[0])); 
                saveFile(WorldUtils.vectorToString(playerPos, new boolean[0]), entity.getName());
                this.knownPlayers.remove(entity);
                this.tpdPlayers.put(entity.getName(), playerPos);
              } 
              this.knownPlayers.put(entity, playerPos);
              continue;
            } 
            this.knownPlayers.put(entity, playerPos);
          } 
        } 
      } 
      if (this.numForgetTicks >= 9000000)
        this.tpdPlayers.clear(); 
      this.numTicks++;
      this.numForgetTicks++;
    } 
  }
}
