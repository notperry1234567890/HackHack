//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "1.12 stable mappings"!

package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.event.events.DamageBlockEvent;
import com.gamesense.api.settings.Setting;
import com.gamesense.client.GameSenseMod;
import com.gamesense.client.module.Module;
import java.util.ArrayList;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.block.Block;
import net.minecraft.block.state.IBlockState;
import net.minecraft.client.Minecraft;
import net.minecraft.init.MobEffects;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.potion.PotionEffect;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class FastBreak extends Module {
  Setting.Mode mode;
  
  Setting.Boolean haste;
  
  @EventHandler
  private final Listener<DamageBlockEvent> listener;
  
  public FastBreak() {
    super("FastBreak", Module.Category.Exploits);
    this.listener = new Listener(event -> {
          if (mc.world == null || mc.player == null)
            return; 
          if (canBreak(event.getPos())) {
            if (this.mode.getValue().equalsIgnoreCase("Packet")) {
              mc.player.swingArm(EnumHand.MAIN_HAND);
              mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, event.getPos(), event.getFace()));
              mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, event.getPos(), event.getFace()));
              event.cancel();
            } 
            if (this.mode.getValue().equalsIgnoreCase("Damage") && mc.playerController.curBlockDamageMP >= 0.7F)
              mc.playerController.curBlockDamageMP = 1.0F; 
            if (this.mode.getValue().equalsIgnoreCase("Instant")) {
              mc.player.swingArm(EnumHand.MAIN_HAND);
              mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, event.getPos(), event.getFace()));
              mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, event.getPos(), event.getFace()));
              mc.playerController.onPlayerDestroyBlock(event.getPos());
              mc.world.setBlockToAir(event.getPos());
            } 
          } 
        }new java.util.function.Predicate[0]);
  }
  
  public void setup() {
    ArrayList<String> Modes = new ArrayList<>();
    Modes.add("Packet");
    Modes.add("Damage");
    Modes.add("Instant");
    this.mode = registerMode("Mode", "Mode", Modes, "Packet");
    this.haste = registerBoolean("Haste", "Haste", false);
  }
  
  public void onUpdate() {
    (Minecraft.getMinecraft()).playerController.blockHitDelay = 0;
    if (this.haste.getValue()) {
      PotionEffect effect = new PotionEffect(MobEffects.HASTE, 80950, 1, false, false);
      mc.player.addPotionEffect(new PotionEffect(effect));
    } 
    if (!this.haste.getValue() && mc.player.isPotionActive(MobEffects.HASTE))
      mc.player.removePotionEffect(MobEffects.HASTE); 
  }
  
  private boolean canBreak(BlockPos pos) {
    IBlockState blockState = mc.world.getBlockState(pos);
    Block block = blockState.getBlock();
    return (block.getBlockHardness(blockState, (World)mc.world, pos) != -1.0F);
  }
  
  public void onEnable() {
    GameSenseMod.EVENT_BUS.subscribe(this);
  }
  
  public void onDisable() {
    GameSenseMod.EVENT_BUS.unsubscribe(this);
    mc.player.removePotionEffect(MobEffects.HASTE);
  }
}
